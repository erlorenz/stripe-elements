{"version":3,"sources":["src/utils/getCssVariables.ts","src/utils/stripeStyles.ts","src/utils/hasError.ts","src/utils/showError.ts","src/utils/removeError.ts","src/index.ts"],"names":[],"mappings":";;;;IEAA;AFAA,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAb;AAEa,AEDb,AEDA,ADAA,AFAA,ICCM,AEDA,ADAA,AFAN,GDEa,CAAA,IEDC,CCDC,EDCE,AEDA,CDAC,CHEL,CIFO,EJEK,CCFzB,GCCM,ADDN,CEAM,ECAA,IHAN,CCCiB,ADDjB,CCCkB,CCDA,CAAC,CHEsB,CAAC,CEDzB,AEDG,CAAC,CFCoB,CFCA,CAAhB,AGFP,CHE8B,CGFF,ECA1B,EAA0B,CDA5B,EAAyC,AFA3D,CAAA,ODEyB,CACvB,gBADuB,CAAZ;AAGA,AEHX,AEDA,OJIW,CAAA,gBAAA,GAAmB,gBAAgB,CAAC,IAAD,CAAhB,CAAuB,gBAAvB,CAC9B,qBAD8B,CAAnB;AAGA,AELX,AEDA,AHAF,EGAE,EHAI,ECEF,CFIS,CAAA,CINJ,AHAE,CGAD,CFED,CAAC,ADFI,OGAZ,CJMW,AEJT,AEFgB,GJMQ,CEHxB,EEHF,CAAyB,EFGlB,CAAC,IAAN,AEHF,EAF4C,CAI5C,EJI0C,AEHzB,CFG0B,IAAD,CAAhB,AEJxB,CFI+C,GEF/C,KAAK,CAAC,IAAN,GFEwB,CAC1B,CEHiB,OAFf,IAGA,KAAK,CAAC,IFCkB,AEDxB,CFCS,IEDM,QAHf,IAIA,KAAK,CAAC,IAAN,KAAe,QALjB,EAOE,OATqC,CAWvC;ACXA,AFEA,EEFA,AFEA,IAAI,EAAE,CEFC,CAAC,SAAR,CAAkB,GAAlB,CAAsB,OAAtB;ADYA,AERA,ADHA,AFEE,IAAA,ECSE,AERE,ADHA,EAAE,GAAG,EFEA,CCSC,CDTC,ECSE,CERG,ADHA,CAAC,ECGE,ADHrB,AFCM,CCUc,ACbqC,CDapC,ACTrB,MCC6B,CAAC,CFQ9B,CAZuC,CAcvC,UEVqB,CACnB,8BAA8B,OAAO,CAAC,EADnB,CAArB;AAGA,ADHA,AFAE,IAAA,EGGE,CAAC,EHHE,EAAE,QGGT,EAAmB,OARyB,AHKnC,CGKT,AHLS,SAFH;AIHR,AHgBE,ADVE,IINJ,AJMI,ECUI,QDVM,EAAE,CCUG,CGhBnB,CJGQ,CCac,CGhBtB,IHgB2B,CAAC,OAAN,CAAc,EGhBpC,CAAA,OAAA,CAAA,AHgBE,CAfuC,CAiBvC,oBGlBF,CAAA,CAAA;ADWE,ADLA,AFCE,EGIF,EHJE,EEDE,OAAO,CCKC,AHJA,CGIC,CDLC,AFCA,CEDA,EAAA,GAAA,CAAA,CCKd,CDLc,ECKW,AHRnB,CEGQ,CCKd,MDLc,MAAO,IAAP,IAAO,EAAA,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAO,EAAA,CAAE,IAAT,MAAa,IAAb,IAAa,EAAA,KAAA,KAAA,CAAb,GAAa,KAAA,CAAb,GAAa,EAAA,CAAE,aAAF,CACzB,8BAA8B,EADL,CAA3B;AELF,AHkBE,AEPA,AHJE,ECWF,AEPA,ECXF,AJOI,KCWK,CAAC,EDXE,CCWV,CGlBF,AHkBc,AEPA,AHJA,CGIC,ECXf,GDWE,AHTM,CGSa,CFOnB,MEPA,GAA6B,CCX/B,CAAA,IDWE,CAZ4C,CAc5C,CCbF,CAAA,kBAAA,CAAA,CAAA;AHmBE,ACXA,AFAE,IAAA,ECWE,ACXA,CAAC,ODWO,ACXZ,CDWa,CCXC,CFAC,EAAE,CCWjB,EAAoB,OAAO,GDjBrB,CCiBc,CAnBmB,CAqBvC;AGpBF,ADaE,ADLE,AFCA,IITJ,AFQI,ECKI,KDLG,CCKG,EDLA,CERd,ADaiB,GCbjB,IFQsB,CCKG,ADLF,CCKG,CHJD,QITzB,CAAA,EFQc,CCKG,ADLoB,CCKG,EDL1B,CERd,AFQI,CERJ,KDaiB,CAAf,aCbF,CAAA,CAAA;AHqBE,AEPA,ADLE,AFCE,EGIJ,EDLE,EDYE,ADXA,EGIE,CAAC,EDLE,AFCA,CEDC,CFCC,CCWC,CAAC,EEPb,GAAkB,CDLhB,EDYE,CCZkB,CCKtB,EFOyB,QAAQ,CAAC,GCZhC,SDYF,EACE,OAAO,0BAAwB,WAAxB,GAAmC,GAA1C,CAvBqC,CAyBvC;AGvBF,ADcC,ADLG,AFDqB,CGXzB,GCGA,AFSI,CFTI,MESG,CAAC,EAAR,GETJ,AFSiB,GETjB,YFSgC,EAA5B,CETJ,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA,EAEA;AACA,AHqBE,ACdE,AFCA,KEDA,CDcE,CCdF,GAAA,CAAA,EAAA,CDcU,CAAC,CCdX,KFCiB,EEDjB,IDcF,EAA2B,ACdlB,IAAP,GDcgC,CCdzB,EAAA,KAAA,KAAA,CAAP,GAAO,GDc2C,ECd3C,CAAP,GAAO,EAAA,CAAE,EDcuB,GAA6B,GAApC,CA1BY,CA4BvC,AChBE,MAAmB,IAAnB,IAAmB,EAAA,KAAA,KAAA,CAAnB,GAAmB,KAAA,CAAnB,GAAmB,EAAA,CAAE,YAAF,CAAe,OAAf,EAAwB,OAAO,CAAC,WAAhC,CAAnB;ACMJ,ADLG,AFCG,GEfqD,CAgBzD,EFDI,CGIN,CAAA,OAAA,CHJgB,EGID,AHJG,WGIlB,AHLqB;ACgBnB,ADdI,MCcA,ADdA,QCcQ,ADdA,CCcC,CDdC,MCcd,ADhBmB,ECgBG,OAAO,2BAAP,CA7BiB,CA+BvC;AGzBF,AJUM,IIVA,EJUA,IIVM,CJUD,EIVI,AJUF,MIVQ,CAAC,UJUT,CAAA,iCIVQ,CAArB;AACA,AHyBE,AChBA,AFHmB,EEGnB,EETI,EHyBA,GChBG,CAAC,EETI,EHyBA,CGzBG,AHyBF,IChBb,EETqB,CAAC,AFSF,CDgBpB,EAAuB,EChBvB,CAjByD,CAmBzD,CEXe,CAAgB,CHyBD,wBAAP,CAhCgB,CAkCvC;AG1BA,AJNM,EIMN,CJPY,IIOP,EAAE,CACL;AACE,AHyBJ,AChBA,AFAA,EEAA,AFAA,EITI,EHyBA,GChBG,AFAA,CITG,AFSF,CFAC,CITG,EHyBA,CAAC,AChBb,CAAc,OAAd,GAAwB,CDgBxB,EAA2B,IChB3B,GDgBkC,8BAAP,CAnCY,CAqCvC;AG5BE,AFWF,AFAE,EEAF,CEZO,CJYL,KEAK,CAAC,GFAG,EEAX,AFAa,CEAC,UAAd,GAA2B,GFAd,CAAA,KEAb,CArByD,CAuBzD,KFHS;AIZsB,AH+B/B,ADjBE,CIda,CAAjB,EJcI,ECiBE,GDjBG,EAAE,GCiBG,CAAC,aAAb,ADjBS,CAAA,CCkBP,OAAO,mEAAP,CAvCqC,CAyCvC;AG3BF,AFSE,AFJS,IILL,EFSE,EETE,GAAG,CFSC,GAAG,IETI,CAAC,GFSG,CAAC,EETb,CAAgB,MAAhB,EAAwB,EFSpB,CAAuB,SAAvB,CAAf;AETqC,AH4BrC,AClBA,AFvBY,CAAd,CIauC,AFUrC,IDkBI,CG5BsC,CFUpC,CEVoC,AFUnC,KDkBK,CAAC,EClBb,GAAkB,GEVwB,CAAA,AFU1C,KDkBA,EAA6B,OAAO,+BAAP,CA1CU,CA4CvC;AG9BmC,AFWpC,AFAD,CIXa,AFfb,CEeA,KJWA,CAAA,OAAA,GAAe,KAAf;AIVA,AH8BE,IG9BE,CAAC,CH8BC,IG9BN,CAAW,GH8BG,CAAC,WG9Bf,GAEA,CH4BE,EAA8B,OAAO,oCAAP,CA7CS,CA+CvC;ACpBF,OAAA,CAAA,OAAA,GAAe,SAAf;AETA,AH8BE,IG9BE,CAAC,IH8BI,YG9BT,CAAsB,QAAtB,EAAgC,UAAC,EAAD,EAAe,aH8B7C;AACD,CAjDD,KGkBmC,KAAA,GAAA,EAAA,CAAA;AACjC,MAAM,YAAY,GAAG,QAAQ,CAAC,cAAT,CAAwB,aAAxB,CAArB;AACA,AH+BF,MG/BQ,CH+BR,CAAA,IG/Bc,GAAG,AH+BjB,GAAe,KG/BU,CAAC,EH+B1B,WG/BiB,CAAuB,SAAvB,CAAf;;AAEA,MAAI,KAAJ,EAAW;AACT,IAAA,YAAY,CAAC,WAAb,GAA2B,KAAK,CAAC,OAAjC;AACA,IAAA,MAAM,CAAC,QAAP,GAAkB,IAAlB;AACD,GAHD,MAGO;AACL,IAAA,YAAY,CAAC,WAAb,GAA2B,EAA3B;AACA,IAAA,MAAM,CAAC,QAAP,GAAkB,KAAlB;AACD;AACF,CAXD,GAaA;;AACA,QAAQ,CAAC,gBAAT,CACE,MADF,EAEE,UAAA,KAAA,EAAK;AACH;AACA,MAAM,OAAO,GAAG,KAAK,CAAC,MAAtB;AACA,MAAI,CAAC,OAAO,CAAC,SAAR,CAAkB,QAAlB,CAA2B,UAA3B,CAAL,EAA6C,OAH1C,CAKH;;AACA,MAAM,YAAY,GAAG,UAAA,CAAA,OAAA,CAAS,OAAT,CAArB,CANG,CAQH;;AACA,MAAI,YAAJ,EAAkB;AAChB,IAAA,WAAA,CAAA,OAAA,CAAU,OAAV,EAAmB,YAAnB;AACA;AACD,GAZE,CAcH;;;AACA,EAAA,aAAA,CAAA,OAAA,CAAY,OAAZ;AACD,CAlBH,EAmBE,IAnBF,GAsBA;;AACA,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAT,CAAuB,eAAvB,CAAb;AACA,IAAI,CAAC,gBAAL,CAAsB,QAAtB,EAAgC,UAAC,KAAD,EAAa;AAC3C,EAAA,KAAK,CAAC,cAAN;AACA,EAAA,OAAO,CAAC,GAAR,CAAY,WAAZ;AACD,CAHD","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["const body = document.querySelector('body') as HTMLElement;\n\nexport const textColor = getComputedStyle(body).getPropertyValue(\n  '--text-color-1'\n);\nexport const placeholderColor = getComputedStyle(body).getPropertyValue(\n  '--placeholder-color'\n);\nexport const invalidColor = getComputedStyle(body).getPropertyValue(\n  '--text-color-invalid'\n);\n","import { textColor, placeholderColor, invalidColor } from './getCssVariables';\n\nconst style = {\n  base: {\n    iconColor: 'gray',\n    color: textColor,\n    fontWeight: 600,\n    fontFamily: 'Open Sans',\n    fontSize: '16px',\n    fontSmoothing: 'antialiased',\n\n    ':-webkit-autofill': {\n      color: '#fce883'\n    },\n    '::placeholder': {\n      fontFamily: 'Open Sans',\n      fontSize: '18px',\n      color: placeholderColor\n    }\n  },\n  invalid: {\n    iconColor: invalidColor,\n    color: invalidColor\n  }\n};\n\nexport default style;\n","// Get the Error\nconst hasError = (field: HTMLInputElement) => {\n  // Don't validate submits, buttons, file and reset inputs, and disabled fields\n  if (\n    field.disabled ||\n    field.type === 'file' ||\n    field.type === 'reset' ||\n    field.type === 'submit' ||\n    field.type === 'button'\n  )\n    return;\n\n  // Get validity\n  var validity = field.validity;\n\n  // Get field name\n  const displayName = field.dataset.displayname;\n\n  // If valid, return null\n  console.log(validity);\n  if (validity.valid) return null;\n\n  // If field is required and empty\n  if (validity.tooShort || validity.typeMismatch)\n    return `Please enter a valid ${displayName}.`;\n\n  // If not the right type\n  if (validity.valueMissing) return `Please enter a ${displayName}.`;\n\n  // If too long\n  if (validity.tooLong) return 'Please shorten this text.';\n\n  // If number input isn't a number\n  if (validity.badInput) return 'Please enter a number.';\n\n  // If a number value doesn't match the step interval\n  if (validity.stepMismatch) return 'Please select a valid value.';\n\n  // If a number field is over the max\n  if (validity.rangeOverflow)\n    return 'This card amount is too high. Please contact us for instructions.';\n\n  // If a number field is below the min\n  if (validity.rangeUnderflow) return 'Please select a larger value.';\n\n  // If pattern doesn't match\n  if (validity.patternMismatch) return 'Please match the requested format.';\n\n  // If all else fails, return a generic catchall error\n  return 'The value you entered for this field is invalid.';\n};\n\nexport default hasError;\n","const showError = (element: HTMLInputElement, error: string) => {\n  element.classList.add('error');\n  const id = element.id;\n\n  // Check if error message field already exists\n  // If not, create one\n  var message = element?.form?.querySelector(\n    '.error-message#error-for-' + id\n  ) as HTMLParagraphElement;\n  if (!message) {\n    message = document.createElement('p');\n    message.className = 'error-message';\n    message.id = 'error-for-' + id;\n    element?.parentNode?.insertBefore(message, element.nextSibling);\n  }\n\n  // Update error message\n  message.innerHTML = error;\n\n  // Show error message\n  message.style.display = 'block';\n  message.style.visibility = 'visible';\n\n  // Disable submit\n  const button = document.querySelector('#submit') as HTMLButtonElement;\n  button.disabled = true;\n};\n\nexport default showError;\n","const removeError = (element: HTMLInputElement) => {\n  // Remove error from input element\n  element.classList.remove('error');\n\n  // See if there is an error message currently\n  const errorMessage = document.querySelector(\n    '.error-message#error-for-' + element.id\n  ) as HTMLParagraphElement | null;\n  if (!errorMessage) return;\n\n  // Hide it\n  errorMessage.innerHTML = '';\n  errorMessage.style.display = 'none';\n\n  // Enable submit\n  const button = document.querySelector('#submit') as HTMLButtonElement;\n  button.disabled = false;\n};\n\nexport default removeError;\n","import style from './utils/stripeStyles';\nimport hasError from './utils/hasError';\nimport showError from './utils/showError';\nimport removeError from './utils/removeError';\n\n// Create and Mount Stripe\n//@ts-ignore\nconst stripe = Stripe('pk_test_Ee9UhcHHJ4wwWXtjwnLMKmU300NEwIXvWS');\nconst elements = stripe.elements({\n  fonts: [\n    {\n      cssSrc: 'https://fonts.googleapis.com/css?family=Open+Sans'\n    }\n  ]\n});\nconst card = elements.create('card', { style });\ncard.mount('#card-element');\n\n// Validate Errors on Stripe Elemnent\ncard.addEventListener('change', ({ error }: any) => {\n  const displayError = document.getElementById('card-errors') as HTMLElement;\n  const button = document.querySelector('#submit') as HTMLButtonElement;\n\n  if (error) {\n    displayError.textContent = error.message;\n    button.disabled = true;\n  } else {\n    displayError.textContent = '';\n    button.disabled = false;\n  }\n});\n\n// Validate Other Errors\ndocument.addEventListener(\n  'blur',\n  event => {\n    // Only run if the field is in a form to be validated\n    const element = event.target as HTMLInputElement;\n    if (!element.classList.contains('validate')) return;\n\n    // Validate the field\n    const errorMessage = hasError(element);\n\n    // If there's an error, show it\n    if (errorMessage) {\n      showError(element, errorMessage);\n      return;\n    }\n\n    // Otherwise, remove any existing error message\n    removeError(element);\n  },\n  true\n);\n\n// Submit\nconst form = document.querySelector('#payment-form') as HTMLFormElement;\nform.addEventListener('submit', (event: Event) => {\n  event.preventDefault();\n  console.log('SUBMITTED');\n});\n"]}